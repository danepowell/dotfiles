#!/bin/bash

# Usage:
#  gitup [site] [branch or full]

# Exit on errors
set -e

# Set variables
git_dir=`git rev-parse --show-toplevel`
project=$1
branch=$2
drush_args="-y -r ${git_dir}/docroot -l ${project}.local"
echo "Drush args are ${drush_args}"

# Update codebase
echo "Updating codebase..."
git checkout master
git fetch upstream
git fetch acquia
git reset --hard upstream/master

if [ -z "${project}" ]; then
    exit
fi

# Checkout PR
if [ -n "${branch}" ] && [ "${branch}" != "full" ]; then
  echo "Checking out ${branch}..."
  hub checkout ${branch}
  echo "Merging master..."
  git merge --no-edit master
fi

# Compile theme changes
for D in `find ${git_dir}/docroot/sites/all/themes/custom -mindepth 1 -maxdepth 1 -type d`; do
  if [ -f "${D}/Gemfile.lock" ]; then
    echo "Bundling ${D}..."
    if [ "${branch}" == "full" ]; then
      (cd ${D}; bundle install; bundle exec compass compile)
    else
      (cd ${D}; bundle exec compass compile)
    fi
  else
    echo "No gemfile found for ${D}, skipping."
  fi
done

# Import DB
if [ "${branch}" == "full" ]; then
  echo "Importing DB for site ${project}..."
  mysql -e "DROP DATABASE ${project};"
  mysql -e "CREATE DATABASE ${project};"
  mysql ${project} < ~/Desktop/*${project}*.sql
fi

# Update DB
echo "Updating DB..."
drush lightupdb ${drush_args}
echo "Clearing caches..."
drush cc all ${drush_args}
echo "Reverting features..."
drush fra ${drush_args}

if [ "${branch}" == "full" ]; then
  drush en stage_file_proxy dblog diff devel ${drush_args}
  drush cron ${drush_args}
  drush uli --uid=1 ${drush_args}
fi
