#!/bin/bash

# Usage:
#  gitup [site] [branch or full]

# Exit on errors
set -e

# Set variables.
git_dir=`git rev-parse --show-toplevel`
git_branch=`git rev-parse --abbrev-ref HEAD`
project=$1
branch=$2
drush_args="-y -r ${git_dir}/docroot -l ${project}.local"
echo "Drush args are ${drush_args}"

# Check if project exists.
if mysql "${project}" >/dev/null 2>&1 </dev/null
then
  echo "${project} found"
else
  echo "${project} does not exist (or I do not have permission to access it)"
  exit
fi

# Update codebase.
echo "Updating codebase..."
git fetch upstream
git fetch acquia
git reset --hard upstream/${git_branch}

# Exit if this is just a code update.
if [ -z "${project}" ]; then
    exit
fi

# Checkout PR.
if [ -n "${branch}" ] && [ "${branch}" != "full" ]; then
  echo "Checking out ${branch}..."
  hub checkout ${branch}
  echo "Merging master..."
  git merge --no-edit ${git_branch}
fi

# Compile theme changes.
for D in `find ${git_dir}/docroot/sites/all/themes/custom -mindepth 1 -maxdepth 1 -type d`; do
  if [ -f "${D}/Gemfile.lock" ]; then
    echo "Bundling ${D}..."
    if [ "${branch}" == "full" ]; then
      (cd ${D}; bundle install; bundle exec compass compile)
    else
      (cd ${D}; bundle exec compass compile)
    fi
  else
    echo "No gemfile found for ${D}, skipping."
  fi
done

# Import DB.
if [ "${branch}" == "full" ]; then
  echo "Emptying DB..."
  mysql -e "DROP DATABASE ${project};"
  mysql -e "CREATE DATABASE ${project};"
  if [ -f "${HOME}/Desktop/${project}-${git_branch}-inter.sql" ]; then
    echo "Importing intermediate DB..."
    mysql ${project} < ~/Desktop/${project}-${git_branch}-inter.sql
  else
    echo "Importing base DB..."
    mysql ${project} < ~/Desktop/*-${project}-*.sql
  fi
  drush cc all ${drush_args}
fi

# Update DB.
echo "Updating DB..."
echo "(updates started at `date`)"
drush lightupdb ${drush_args}
#echo "Clearing caches..."
#drush cc all ${drush_args}
echo "Reverting features..."
drush fra ${drush_args}

# Post-setup activities.
if [ "${branch}" == "full" ]; then
  if [ ! -f "${HOME}/Desktop/${project}-${git_branch}-inter.sql" ]; then
    echo "Enabling devel modules..."
    drush en stage_file_proxy dblog diff devel feeds_ui ${drush_args}
    echo "Running cron..."
    drush cron ${drush_args}
    echo "Dumping intermediate DB..."
    mysqldump ${project} > ~/Desktop/${project}-${git_branch}-inter.sql
  fi
  drush uli --uid=1 ${drush_args}
fi
